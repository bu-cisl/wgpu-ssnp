cmake_minimum_required(VERSION 3.0...3.25)
project(
    OPTICS_SIM
    VERSION 0.1.0
    LANGUAGES CXX C
)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

file(GLOB_RECURSE SRC_FILES
    ${CMAKE_SOURCE_DIR}/src/*.cpp
)

add_executable(optics_sim ${SRC_FILES})

set_target_properties(optics_sim PROPERTIES
    COMPILE_WARNING_AS_ERROR ON
)

if (MSVC)
    target_compile_options(optics_sim PRIVATE /W4)
else()
    target_compile_options(optics_sim PRIVATE -Wall -Wextra -pedantic)
endif()

# Link WebGPU
add_subdirectory(webgpu)
target_link_libraries(optics_sim PRIVATE webgpu)
target_copy_webgpu_binaries(optics_sim)

# Copy web assets
add_custom_target(copy_web ALL
    COMMAND ${CMAKE_COMMAND} -E copy_directory
            ${CMAKE_SOURCE_DIR}/web
            ${CMAKE_BINARY_DIR}
    COMMENT "Copying web assets to build directory"
)

if (EMSCRIPTEN)
  target_link_options(optics_sim PRIVATE
    -sUSE_WEBGPU
    -sASYNCIFY
    "--preload-file=${CMAKE_CURRENT_SOURCE_DIR}/src@/src"
    -sALLOW_MEMORY_GROWTH=1
    -O3
    -msimd128
    "-sEXPORTED_FUNCTIONS=['_callModel','_malloc','_free']"
    "-sEXPORTED_RUNTIME_METHODS=['ccall','HEAPF32','HEAPU8']"
    -sNO_DISABLE_EXCEPTION_CATCHING
  )
endif()
